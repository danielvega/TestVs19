# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- main

#trigger:
#  branches:
#    include:
#    - '*'

trigger: none

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.8.1'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
  
- task: MSBuild@1
  name: 'Build_Test'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:TransformConfigFiles=True /p:DebugSymbols=True /p:DebugType=portable -m /p:OutputPath=$(build.artifactstagingdirectory)/buildTest'

- task: NuGetCommand@2
  displayName: 'Restore Coverlet Adapter'
  inputs:
    command: custom
    restoreDirectory: .\
    arguments: 'install coverlet.collector -Version 3.0.3 -ExcludeVersion'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    #arguments: $(solution) --no-build -a $(Build.SourcesDirectory)\coverlet.collector\build\netstandard1.0 --collect:"XPlat Code Coverage"
    arguments: $(solution) --no-build -a $(build.artifactstagingdirectory)\coverlet.collector\build\netstandard1.0 --collect:"XPlat Code Coverage"

- task: reportgenerator@5
  inputs:
    reports: $(Pipeline.Workspace)\**\coverage.cobertura.xml
    targetdir: 'coveragereport'
    reporttypes: 'HtmlInline_AzurePipelines;Cobertura'
#- task: reportgenerator@5
#  inputs:
#    reports: 'coverage.xml'
#    targetdir: 'coveragereport'
# Publish code coverage results
# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura' # Available options: 'JaCoCo', 'Cobertura'
    #summaryFileLocation: '$(Build.ArtifactStagingDirectory)/TestResults/**/*.coverage'
    summaryFileLocation: '$(Agent.TempDirectory)\coveragereport/cobertura.xml'
    #pathToSources: # Optional
    reportDirectory: 'CoverageReport'# Optional
    #additionalCodeCoverageFiles: # Optional
    #failIfCoverageEmpty: false # Optional

- script: |
    echo "Structure of work folder of this pipeline:"
    tree $(Agent.WorkFolder)\1 /f
    echo "Agent.WorkFolder: $(Agent.WorkFolder)"
    echo "Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)" 
    echo "Build.BinariesDirectory: $(Build.BinariesDirectory)" 
    echo "Build.SourcesDirectory: $(Build.SourcesDirectory)"
    dir "$(Agent.WorkFolder)\1\TestResults"
    echo "Agent.TempDirectory"
    tree $(Agent.TempDirectory) /f
  displayName: 'script section'
  #workingDirectory: $(Build.ArtifactStagingDirectory)
